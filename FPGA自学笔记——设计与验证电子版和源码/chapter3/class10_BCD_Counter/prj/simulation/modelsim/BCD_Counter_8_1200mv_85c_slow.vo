// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.0 Build 156 04/24/2013 SJ Full Version"

// DATE "12/07/2017 21:47:34"

// 
// Device: Altera EP4CE10F17C8 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module BCD_Counter (
	Clk,
	Cin,
	Rst_n,
	Cout,
	q);
input 	Clk;
input 	Cin;
input 	Rst_n;
output 	Cout;
output 	[3:0] q;

// Design Ports Information
// Cout	=>  Location: PIN_P2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// q[0]	=>  Location: PIN_L4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// q[1]	=>  Location: PIN_P1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// q[2]	=>  Location: PIN_K5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// q[3]	=>  Location: PIN_R1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Cin	=>  Location: PIN_T3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Clk	=>  Location: PIN_E1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Rst_n	=>  Location: PIN_M2,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("BCD_Counter_8_1200mv_85c_v_slow.sdo");
// synopsys translate_on

wire \Clk~input_o ;
wire \Clk~inputclkctrl_outclk ;
wire \Cout~output_o ;
wire \q[0]~output_o ;
wire \q[1]~output_o ;
wire \q[2]~output_o ;
wire \q[3]~output_o ;
wire \Cin~input_o ;
wire \cnt[0]~3_combout ;
wire \Rst_n~input_o ;
wire \Rst_n~inputclkctrl_outclk ;
wire \cnt[2]~1_combout ;
wire \cnt~2_combout ;
wire \cnt~0_combout ;
wire \Equal0~0_combout ;
wire \Cout~0_combout ;
wire [3:0] cnt;


// Location: IOIBUF_X0_Y11_N8
cycloneive_io_ibuf \Clk~input (
	.i(Clk),
	.ibar(gnd),
	.o(\Clk~input_o ));
// synopsys translate_off
defparam \Clk~input .bus_hold = "false";
defparam \Clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G2
cycloneive_clkctrl \Clk~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\Clk~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\Clk~inputclkctrl_outclk ));
// synopsys translate_off
defparam \Clk~inputclkctrl .clock_type = "global clock";
defparam \Clk~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: IOOBUF_X0_Y4_N16
cycloneive_io_obuf \Cout~output (
	.i(\Cout~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Cout~output_o ),
	.obar());
// synopsys translate_off
defparam \Cout~output .bus_hold = "false";
defparam \Cout~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y6_N23
cycloneive_io_obuf \q[0]~output (
	.i(cnt[0]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\q[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \q[0]~output .bus_hold = "false";
defparam \q[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y4_N23
cycloneive_io_obuf \q[1]~output (
	.i(cnt[1]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\q[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \q[1]~output .bus_hold = "false";
defparam \q[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y6_N16
cycloneive_io_obuf \q[2]~output (
	.i(cnt[2]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\q[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \q[2]~output .bus_hold = "false";
defparam \q[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y5_N23
cycloneive_io_obuf \q[3]~output (
	.i(cnt[3]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\q[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \q[3]~output .bus_hold = "false";
defparam \q[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X1_Y0_N1
cycloneive_io_ibuf \Cin~input (
	.i(Cin),
	.ibar(gnd),
	.o(\Cin~input_o ));
// synopsys translate_off
defparam \Cin~input .bus_hold = "false";
defparam \Cin~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N10
cycloneive_lcell_comb \cnt[0]~3 (
// Equation(s):
// \cnt[0]~3_combout  = !cnt[0]

	.dataa(gnd),
	.datab(gnd),
	.datac(cnt[0]),
	.datad(gnd),
	.cin(gnd),
	.combout(\cnt[0]~3_combout ),
	.cout());
// synopsys translate_off
defparam \cnt[0]~3 .lut_mask = 16'h0F0F;
defparam \cnt[0]~3 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N15
cycloneive_io_ibuf \Rst_n~input (
	.i(Rst_n),
	.ibar(gnd),
	.o(\Rst_n~input_o ));
// synopsys translate_off
defparam \Rst_n~input .bus_hold = "false";
defparam \Rst_n~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G4
cycloneive_clkctrl \Rst_n~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\Rst_n~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\Rst_n~inputclkctrl_outclk ));
// synopsys translate_off
defparam \Rst_n~inputclkctrl .clock_type = "global clock";
defparam \Rst_n~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: FF_X1_Y4_N11
dffeas \cnt[0] (
	.clk(\Clk~inputclkctrl_outclk ),
	.d(\cnt[0]~3_combout ),
	.asdata(vcc),
	.clrn(\Rst_n~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Cin~input_o ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[0]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt[0] .is_wysiwyg = "true";
defparam \cnt[0] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N28
cycloneive_lcell_comb \cnt[2]~1 (
// Equation(s):
// \cnt[2]~1_combout  = cnt[2] $ (((\Cin~input_o  & (cnt[1] & cnt[0]))))

	.dataa(\Cin~input_o ),
	.datab(cnt[1]),
	.datac(cnt[2]),
	.datad(cnt[0]),
	.cin(gnd),
	.combout(\cnt[2]~1_combout ),
	.cout());
// synopsys translate_off
defparam \cnt[2]~1 .lut_mask = 16'h78F0;
defparam \cnt[2]~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y4_N29
dffeas \cnt[2] (
	.clk(\Clk~inputclkctrl_outclk ),
	.d(\cnt[2]~1_combout ),
	.asdata(vcc),
	.clrn(\Rst_n~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[2]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt[2] .is_wysiwyg = "true";
defparam \cnt[2] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N2
cycloneive_lcell_comb \cnt~2 (
// Equation(s):
// \cnt~2_combout  = (cnt[0] & (!cnt[1] & ((cnt[2]) # (!cnt[3])))) # (!cnt[0] & (((cnt[1]))))

	.dataa(cnt[0]),
	.datab(cnt[3]),
	.datac(cnt[1]),
	.datad(cnt[2]),
	.cin(gnd),
	.combout(\cnt~2_combout ),
	.cout());
// synopsys translate_off
defparam \cnt~2 .lut_mask = 16'h5A52;
defparam \cnt~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y4_N3
dffeas \cnt[1] (
	.clk(\Clk~inputclkctrl_outclk ),
	.d(\cnt~2_combout ),
	.asdata(vcc),
	.clrn(\Rst_n~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Cin~input_o ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[1]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt[1] .is_wysiwyg = "true";
defparam \cnt[1] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N0
cycloneive_lcell_comb \cnt~0 (
// Equation(s):
// \cnt~0_combout  = (cnt[0] & ((cnt[1] & (cnt[3] $ (cnt[2]))) # (!cnt[1] & (cnt[3] & cnt[2])))) # (!cnt[0] & (((cnt[3]))))

	.dataa(cnt[0]),
	.datab(cnt[1]),
	.datac(cnt[3]),
	.datad(cnt[2]),
	.cin(gnd),
	.combout(\cnt~0_combout ),
	.cout());
// synopsys translate_off
defparam \cnt~0 .lut_mask = 16'h78D0;
defparam \cnt~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y4_N1
dffeas \cnt[3] (
	.clk(\Clk~inputclkctrl_outclk ),
	.d(\cnt~0_combout ),
	.asdata(vcc),
	.clrn(\Rst_n~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Cin~input_o ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[3]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt[3] .is_wysiwyg = "true";
defparam \cnt[3] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N24
cycloneive_lcell_comb \Equal0~0 (
// Equation(s):
// \Equal0~0_combout  = (!cnt[2] & (cnt[3] & (!cnt[1] & cnt[0])))

	.dataa(cnt[2]),
	.datab(cnt[3]),
	.datac(cnt[1]),
	.datad(cnt[0]),
	.cin(gnd),
	.combout(\Equal0~0_combout ),
	.cout());
// synopsys translate_off
defparam \Equal0~0 .lut_mask = 16'h0400;
defparam \Equal0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N26
cycloneive_lcell_comb \Cout~0 (
// Equation(s):
// \Cout~0_combout  = (\Cin~input_o  & \Equal0~0_combout )

	.dataa(gnd),
	.datab(gnd),
	.datac(\Cin~input_o ),
	.datad(\Equal0~0_combout ),
	.cin(gnd),
	.combout(\Cout~0_combout ),
	.cout());
// synopsys translate_off
defparam \Cout~0 .lut_mask = 16'hF000;
defparam \Cout~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign Cout = \Cout~output_o ;

assign q[0] = \q[0]~output_o ;

assign q[1] = \q[1]~output_o ;

assign q[2] = \q[2]~output_o ;

assign q[3] = \q[3]~output_o ;

endmodule

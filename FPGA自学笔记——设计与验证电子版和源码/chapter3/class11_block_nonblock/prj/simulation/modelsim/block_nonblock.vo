// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.0 Build 156 04/24/2013 SJ Full Version"

// DATE "12/07/2017 21:51:43"

// 
// Device: Altera EP4CE10F17C8 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module block_nonblock (
	Clk,
	Rst_n,
	a,
	b,
	c,
	out);
input 	Clk;
input 	Rst_n;
input 	a;
input 	b;
input 	c;
output 	[1:0] out;

// Design Ports Information
// out[0]	=>  Location: PIN_B1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// out[1]	=>  Location: PIN_D1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// c	=>  Location: PIN_C2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Clk	=>  Location: PIN_E1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Rst_n	=>  Location: PIN_M2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// a	=>  Location: PIN_G5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// b	=>  Location: PIN_F3,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("block_nonblock_v.sdo");
// synopsys translate_on

wire \out[0]~output_o ;
wire \out[1]~output_o ;
wire \Clk~input_o ;
wire \Clk~inputclkctrl_outclk ;
wire \c~input_o ;
wire \a~input_o ;
wire \b~input_o ;
wire \Add1~0_combout ;
wire \Rst_n~input_o ;
wire \Add0~0_combout ;
wire \Rst_n~inputclkctrl_outclk ;
wire \out[0]~reg0_q ;
wire \Add1~1_combout ;
wire \Add0~1_combout ;
wire \out[1]~reg0_q ;
wire [1:0] d;


// Location: IOOBUF_X0_Y22_N2
cycloneive_io_obuf \out[0]~output (
	.i(\out[0]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\out[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \out[0]~output .bus_hold = "false";
defparam \out[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y21_N23
cycloneive_io_obuf \out[1]~output (
	.i(\out[1]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\out[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \out[1]~output .bus_hold = "false";
defparam \out[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N8
cycloneive_io_ibuf \Clk~input (
	.i(Clk),
	.ibar(gnd),
	.o(\Clk~input_o ));
// synopsys translate_off
defparam \Clk~input .bus_hold = "false";
defparam \Clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G2
cycloneive_clkctrl \Clk~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\Clk~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\Clk~inputclkctrl_outclk ));
// synopsys translate_off
defparam \Clk~inputclkctrl .clock_type = "global clock";
defparam \Clk~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: IOIBUF_X0_Y22_N15
cycloneive_io_ibuf \c~input (
	.i(c),
	.ibar(gnd),
	.o(\c~input_o ));
// synopsys translate_off
defparam \c~input .bus_hold = "false";
defparam \c~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y19_N1
cycloneive_io_ibuf \a~input (
	.i(a),
	.ibar(gnd),
	.o(\a~input_o ));
// synopsys translate_off
defparam \a~input .bus_hold = "false";
defparam \a~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y21_N8
cycloneive_io_ibuf \b~input (
	.i(b),
	.ibar(gnd),
	.o(\b~input_o ));
// synopsys translate_off
defparam \b~input .bus_hold = "false";
defparam \b~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y21_N28
cycloneive_lcell_comb \Add1~0 (
// Equation(s):
// \Add1~0_combout  = \a~input_o  $ (\b~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\a~input_o ),
	.datad(\b~input_o ),
	.cin(gnd),
	.combout(\Add1~0_combout ),
	.cout());
// synopsys translate_off
defparam \Add1~0 .lut_mask = 16'h0FF0;
defparam \Add1~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N15
cycloneive_io_ibuf \Rst_n~input (
	.i(Rst_n),
	.ibar(gnd),
	.o(\Rst_n~input_o ));
// synopsys translate_off
defparam \Rst_n~input .bus_hold = "false";
defparam \Rst_n~input .simulate_z_as = "z";
// synopsys translate_on

// Location: FF_X1_Y21_N29
dffeas \d[0] (
	.clk(\Clk~inputclkctrl_outclk ),
	.d(\Add1~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Rst_n~input_o ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(d[0]),
	.prn(vcc));
// synopsys translate_off
defparam \d[0] .is_wysiwyg = "true";
defparam \d[0] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y21_N24
cycloneive_lcell_comb \Add0~0 (
// Equation(s):
// \Add0~0_combout  = \c~input_o  $ (d[0])

	.dataa(gnd),
	.datab(gnd),
	.datac(\c~input_o ),
	.datad(d[0]),
	.cin(gnd),
	.combout(\Add0~0_combout ),
	.cout());
// synopsys translate_off
defparam \Add0~0 .lut_mask = 16'h0FF0;
defparam \Add0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: CLKCTRL_G4
cycloneive_clkctrl \Rst_n~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\Rst_n~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\Rst_n~inputclkctrl_outclk ));
// synopsys translate_off
defparam \Rst_n~inputclkctrl .clock_type = "global clock";
defparam \Rst_n~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: FF_X1_Y21_N25
dffeas \out[0]~reg0 (
	.clk(\Clk~inputclkctrl_outclk ),
	.d(\Add0~0_combout ),
	.asdata(vcc),
	.clrn(\Rst_n~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\out[0]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \out[0]~reg0 .is_wysiwyg = "true";
defparam \out[0]~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y21_N22
cycloneive_lcell_comb \Add1~1 (
// Equation(s):
// \Add1~1_combout  = (\a~input_o  & \b~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\a~input_o ),
	.datad(\b~input_o ),
	.cin(gnd),
	.combout(\Add1~1_combout ),
	.cout());
// synopsys translate_off
defparam \Add1~1 .lut_mask = 16'hF000;
defparam \Add1~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y21_N23
dffeas \d[1] (
	.clk(\Clk~inputclkctrl_outclk ),
	.d(\Add1~1_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Rst_n~input_o ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(d[1]),
	.prn(vcc));
// synopsys translate_off
defparam \d[1] .is_wysiwyg = "true";
defparam \d[1] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y21_N30
cycloneive_lcell_comb \Add0~1 (
// Equation(s):
// \Add0~1_combout  = d[1] $ (((\c~input_o  & d[0])))

	.dataa(gnd),
	.datab(\c~input_o ),
	.datac(d[1]),
	.datad(d[0]),
	.cin(gnd),
	.combout(\Add0~1_combout ),
	.cout());
// synopsys translate_off
defparam \Add0~1 .lut_mask = 16'h3CF0;
defparam \Add0~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y21_N31
dffeas \out[1]~reg0 (
	.clk(\Clk~inputclkctrl_outclk ),
	.d(\Add0~1_combout ),
	.asdata(vcc),
	.clrn(\Rst_n~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\out[1]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \out[1]~reg0 .is_wysiwyg = "true";
defparam \out[1]~reg0 .power_up = "low";
// synopsys translate_on

assign out[0] = \out[0]~output_o ;

assign out[1] = \out[1]~output_o ;

endmodule

//--------------------------------------------------------------------------------------------
//
// Generated by X-HDL VHDL Translator - Version 2.0.0 Feb. 1, 2011
// ?? 7? 12 2020 13:56:42
//
//      Input file      : 
//      Component name  : demo_tb
//      Author          : 
//      Company         : 
//
//      Description     : 
//
//
//--------------------------------------------------------------------------------------------


module demo_tb;
   parameter [0:0] C_EXTERNAL_CLOCK = 0;
   parameter [4:0] C_PHYADDR = 4;
   
   parameter [7:0] frame_data[0:65]columnsbad_frame[] = {{{{8'hDA, 1'b1, 1'b0}, {8'h02, 1'b1, 1'b0}, {8'h03, 1'b1, 1'b0}, {8'h04, 1'b1, 1'b0}, {8'h05, 1'b1, 1'b0}, {8'h06, 1'b1, 1'b0}, {8'h5A, 1'b1, 1'b0}, {8'h02, 1'b1, 1'b0}, {8'h03, 1'b1, 1'b0}, {8'h04, 1'b1, 1'b0}, {8'h05, 1'b1, 1'b0}, {8'h06, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h2E, 1'b1, 1'b0}, {8'h01, 1'b1, 1'b0}, {8'h02, 1'b1, 1'b0}, {8'h03, 1'b1, 1'b0}, {8'h04, 1'b1, 1'b0}, {8'h05, 1'b1, 1'b0}, {8'h06, 1'b1, 1'b0}, {8'h07, 1'b1, 1'b0}, {8'h08, 1'b1, 1'b0}, {8'h09, 1'b1, 1'b0}, {8'h0A, 1'b1, 1'b0}, {8'h0B, 1'b1, 1'b0}, {8'h0C, 1'b1, 1'b0}, {8'h0D, 1'b1, 1'b0}, {8'h0E, 1'b1, 1'b0}, {8'h0F, 1'b1, 1'b0}, {8'h10, 1'b1, 1'b0}, {8'h11, 1'b1, 1'b0}, {8'h12, 1'b1, 1'b0}, {8'h13, 1'b1, 1'b0}, {8'h14, 1'b1, 1'b0}, {8'h15, 1'b1, 1'b0}, {8'h16, 1'b1, 1'b0}, {8'h17, 1'b1, 1'b0}, {8'h18, 1'b1, 1'b0}, {8'h19, 1'b1, 1'b0}, {8'h1A, 1'b1, 1'b0}, {8'h1B, 1'b1, 1'b0}, {8'h1C, 1'b1, 1'b0}, {8'h1D, 1'b1, 1'b0}, {8'h1E, 1'b1, 1'b0}, {8'h1F, 1'b1, 1'b0}, {8'h20, 1'b1, 1'b0}, {8'h21, 1'b1, 1'b0}, {8'h22, 1'b1, 1'b0}, {8'h23, 1'b1, 1'b0}, {8'h24, 1'b1, 1'b0}, {8'h25, 1'b1, 1'b0}, {8'h26, 1'b1, 1'b0}, {8'h27, 1'b1, 1'b0}, {8'h28, 1'b1, 1'b0}, {8'h29, 1'b1, 1'b0}, {8'h2A, 1'b1, 1'b0}, {8'h2B, 1'b1, 1'b0}, {8'h2C, 1'b1, 1'b0}, {8'h2D, 1'b1, 1'b0}, {8'h2E, 1'b1, 1'b0}, {------------------------------------------------------------{{8'h00, 1'b0, 1'b0}}}}, 1'b0}, {{{8'hDA, 1'b1, 1'b0}, {8'h02, 1'b1, 1'b0}, {8'h03, 1'b1, 1'b0}, {8'h04, 1'b1, 1'b0}, {8'h05, 1'b1, 1'b0}, {8'h06, 1'b1, 1'b0}, {8'h5A, 1'b1, 1'b0}, {8'h02, 1'b1, 1'b0}, {8'h03, 1'b1, 1'b0}, {8'h04, 1'b1, 1'b0}, {8'h05, 1'b1, 1'b0}, {8'h06, 1'b1, 1'b0}, {8'h80, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h01, 1'b1, 1'b0}, {8'h02, 1'b1, 1'b0}, {8'h03, 1'b1, 1'b0}, {8'h04, 1'b1, 1'b0}, {8'h05, 1'b1, 1'b0}, {8'h06, 1'b1, 1'b0}, {8'h07, 1'b1, 1'b0}, {8'h08, 1'b1, 1'b0}, {8'h09, 1'b1, 1'b0}, {8'h0A, 1'b1, 1'b0}, {8'h0B, 1'b1, 1'b0}, {8'h0C, 1'b1, 1'b0}, {8'h0D, 1'b1, 1'b0}, {8'h0E, 1'b1, 1'b0}, {8'h0F, 1'b1, 1'b0}, {8'h10, 1'b1, 1'b0}, {8'h11, 1'b1, 1'b0}, {8'h12, 1'b1, 1'b0}, {8'h13, 1'b1, 1'b0}, {8'h14, 1'b1, 1'b0}, {8'h15, 1'b1, 1'b0}, {8'h16, 1'b1, 1'b0}, {8'h17, 1'b1, 1'b0}, {8'h18, 1'b1, 1'b0}, {8'h19, 1'b1, 1'b0}, {8'h1A, 1'b1, 1'b0}, {8'h1B, 1'b1, 1'b0}, {8'h1C, 1'b1, 1'b0}, {8'h1D, 1'b1, 1'b0}, {8'h1E, 1'b1, 1'b0}, {8'h1F, 1'b1, 1'b0}, {8'h20, 1'b1, 1'b0}, {8'h21, 1'b1, 1'b0}, {8'h22, 1'b1, 1'b0}, {8'h23, 1'b1, 1'b0}, {8'h24, 1'b1, 1'b0}, {8'h25, 1'b1, 1'b0}, {8'h26, 1'b1, 1'b0}, {8'h27, 1'b1, 1'b0}, {8'h28, 1'b1, 1'b0}, {8'h29, 1'b1, 1'b0}, {8'h2A, 1'b1, 1'b0}, {8'h2B, 1'b1, 1'b0}, {8'h2C, 1'b1, 1'b0}, {8'h2D, 1'b1, 1'b0}, {8'h2E, 1'b1, 1'b0}, {8'h2F, 1'b1, 1'b0}, {-------------------------------------------------------------{{8'h00, 1'b0, 1'b0}}}}, 1'b0}, {{{8'hDA, 1'b1, 1'b0}, {8'h02, 1'b1, 1'b0}, {8'h03, 1'b1, 1'b0}, {8'h04, 1'b1, 1'b0}, {8'h05, 1'b1, 1'b0}, {8'h06, 1'b1, 1'b0}, {8'h5A, 1'b1, 1'b0}, {8'h02, 1'b1, 1'b0}, {8'h03, 1'b1, 1'b0}, {8'h04, 1'b1, 1'b0}, {8'h05, 1'b1, 1'b0}, {8'h06, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h2E, 1'b1, 1'b0}, {8'h01, 1'b1, 1'b0}, {8'h02, 1'b1, 1'b0}, {8'h03, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h12, 1'b1, 1'b0}, {8'h34, 1'b1, 1'b0}, {8'h56, 1'b1, 1'b1}, {8'h78, 1'b1, 1'b0}, {8'h9A, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {------------------------------------------------------------{{8'h00, 1'b0, 1'b0}}}}, 1'b1}, {{{8'hDA, 1'b1, 1'b0}, {8'h02, 1'b1, 1'b0}, {8'h03, 1'b1, 1'b0}, {8'h04, 1'b1, 1'b0}, {8'h05, 1'b1, 1'b0}, {8'h06, 1'b1, 1'b0}, {8'h5A, 1'b1, 1'b0}, {8'h02, 1'b1, 1'b0}, {8'h03, 1'b1, 1'b0}, {8'h04, 1'b1, 1'b0}, {8'h05, 1'b1, 1'b0}, {8'h06, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h03, 1'b1, 1'b0}, {8'h01, 1'b1, 1'b0}, {8'h02, 1'b1, 1'b0}, {8'h03, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {8'h00, 1'b1, 1'b0}, {------------------------------------------------------------{{8'h00, 1'b0, 1'b0}}}}, 1'b0}};
   
   function [0:0] calc_crc;
      input [0:0]     data;
      input           _data;
      input [0:0]     fcs;
      input           _fcs;
      
      reg [31:0]      crc;
      reg             crc_feedback;
      integer         _data;
      integer         _fcs;
      integer         I;
   begin
      
      crc = (~fcs);
      
      for (I = 0; I <= 7; I = I + 1)
      begin
         crc_feedback = crc[0] ^ data[I];
         
         crc[4:0] = crc[5:1];
         crc[5] = crc[6] ^ crc_feedback;
         crc[7:6] = crc[8:7];
         crc[8] = crc[9] ^ crc_feedback;
         crc[9] = crc[10] ^ crc_feedback;
         crc[14:10] = crc[15:11];
         crc[15] = crc[16] ^ crc_feedback;
         crc[18:16] = crc[19:17];
         crc[19] = crc[20] ^ crc_feedback;
         crc[20] = crc[21] ^ crc_feedback;
         crc[21] = crc[22] ^ crc_feedback;
         crc[22] = crc[23];
         crc[23] = crc[24] ^ crc_feedback;
         crc[24] = crc[25] ^ crc_feedback;
         crc[25] = crc[26];
         crc[26] = crc[27] ^ crc_feedback;
         crc[27] = crc[28] ^ crc_feedback;
         crc[28] = crc[29];
         crc[29] = crc[30] ^ crc_feedback;
         crc[30] = crc[31] ^ crc_feedback;
         crc[31] = crc_feedback;
      end
      
      calc_crc = (~crc);
   end
   endfunction
   
   
   
   parameter [5:0] mdio_1g_data = {1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b0, 1'b1, 1'b0, 1'b1, , , , , , 1'b1, 1'b0, 1'b0, 1'b0, 1'b0, 1'b1, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b1, 1'b0, 1'b1, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0};
   
   
   parameter [5:0] mdio_100m_data = {1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b0, 1'b1, 1'b0, 1'b1, , , , , , 1'b1, 1'b0, 1'b0, 1'b0, 1'b0, 1'b1, 1'b0, 1'b0, 1'b0, 1'b1, 1'b0, 1'b0, 1'b0, 1'b0, 1'b1, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0};
   
   
   parameter [5:0] mdio_10m_data = {1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b1, 1'b0, 1'b1, 1'b0, 1'b1, , , , , , 1'b1, 1'b0, 1'b0, 1'b0, 1'b0, 1'b1, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b1, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0};
   
   parameter       dly = 0;
   
   wire            clkin_p;
   wire            clkin_n;
   
   reg             clkin;
   reg             reset;
   reg             mdio_o;
   wire            mdio_i;
   wire            mdio_t;
   reg             mdc;
   wire            mdc_clk;
   reg             enable_mdc;
   reg             gmii_tx_en;
   reg             gmii_tx_er;
   reg [7:0]       gmii_txd;
   wire            gmii_rx_dv;
   wire            gmii_rx_er;
   wire [7:0]      gmii_rxd;
   reg             rx_monitor_finished_gmii_1G;
   reg             rx_monitor_finished_gmii_10M;
   reg             rx_monitor_finished_gmii_100M;
   reg             tx_monitor_finished_rgmii_1G;
   reg             tx_monitor_finished_rgmii_10M;
   reg             tx_monitor_finished_rgmii_100M;
   reg             management_1g_config_finished;
   reg             management_100m_config_finished;
   reg             management_10m_config_finished;
   reg             rx_gmii_stimulus_finished;
   reg             rx_rgmii_stimulus_finished;
   wire            frame_error;
   reg             error_seen;
   wire            gmii_tx_clk;
   wire            gmii_rx_clk;
   wire            gmii_clk;
   wire            gmii_clk_90;
   reg             rgmii_rxc_1g;
   reg             rgmii_rxc_100m;
   reg             rgmii_rxc_10m;
   reg             dly_rgmii_rxc;
   reg             dly_rgmii_rxc_90;
   wire            gmii_col;
   wire            gmii_crs;
   wire            gmii_col_exp;
   wire            gmii_crs_exp;
   wire            rgmii_txc;
   wire            rgmii_tx_ctl;
   wire [3:0]      rgmii_txd;
   reg             rgmii_rxc;
   reg             rgmii_rx_ctl;
   reg [3:0]       rgmii_rxd;
   wire [1:0]      speed_mode;
   
   
   
   gmii_to_rgmii_0_example_design dut(.tx_reset(reset), .rx_reset(reset), .clkin_p(clkin_p), .clkin_n(clkin_n), .speed_mode(speed_mode), .gmii_tx_clk(gmii_tx_clk), .gmii_tx_en(gmii_tx_en), .gmii_txd(gmii_txd), .gmii_tx_er(gmii_tx_er), .gmii_crs(gmii_crs), .gmii_col(gmii_col), .gmii_rx_clk(gmii_rx_clk), .gmii_rx_dv(gmii_rx_dv), .gmii_rxd(gmii_rxd), .gmii_rx_er(gmii_rx_er), .mdio_gem_mdc(mdc_clk), .mdio_gem_i(mdio_i), .mdio_gem_o(mdio_o), .mdio_gem_t(mdio_t), .link_status(), .clock_speed(), .duplex_status(), .rgmii_txc(rgmii_txc), .rgmii_txd(rgmii_txd), .rgmii_tx_ctl(rgmii_tx_ctl), .rgmii_rxc(dly_rgmii_rxc), .rgmii_rxd(rgmii_rxd), .rgmii_rx_ctl(rgmii_rx_ctl), .mdio_phy_mdc(), .mdio_phy_mdio());
   
   
   always
   begin: p_timeout
      #(620);
      if (!(1'b0))
      begin
         $write("FAILURE: ");
         $display("ERROR - Simulation running forever!");
      end
   end
   
   
   always
   begin: p_mdc
      mdc <= 1'b0;
      #(200);
      mdc <= 1'b1;
      #(200);
   end
   
   assign mdc_clk = mdc & enable_mdc;
   
   
   always
   begin: p_clkin
      clkin <= 1'b0;
      #(200);
      while ()
      begin
         clkin <= 1'b0;
         #(2.5);
         clkin <= 1'b1;
         #(2.5);
      end
   end
   
   assign clkin_p = clkin;
   assign clkin_n = (~clkin);
   
   
   always
   begin: p_rgmii_rxc_1g
      rgmii_rxc_1g <= 1'b0;
      #(200);
      while ()
      begin
         rgmii_rxc_1g <= 1'b0;
         #(4);
         rgmii_rxc_1g <= 1'b1;
         #(4);
      end
   end
   
   
   always
   begin: p_rgmii_rxc_100m
      rgmii_rxc_100m <= 1'b0;
      #(200);
      while ()
      begin
         rgmii_rxc_100m <= 1'b0;
         #(20);
         rgmii_rxc_100m <= 1'b1;
         #(20);
      end
   end
   
   
   always
   begin: p_rgmii_rxc_10m
      rgmii_rxc_10m <= 1'b0;
      #(200);
      while ()
      begin
         rgmii_rxc_10m <= 1'b0;
         #(200);
         rgmii_rxc_10m <= 1'b1;
         #(200);
      end
   end
   
   
   always @(speed_mode or rgmii_rxc_1g or rgmii_rxc_100m or rgmii_rxc_10m)
   begin: p_selrxc
      if (speed_mode == 2'b11)
      begin
         rgmii_rxc <= 1'b0;
         dly_rgmii_rxc <= 1'b0;
         dly_rgmii_rxc_90 <= 1'b0;
      end
      else if (speed_mode == 2'b10)
      begin
         rgmii_rxc <= rgmii_rxc_1g;
         dly_rgmii_rxc <= #2 rgmii_rxc_1g;
         dly_rgmii_rxc_90 <= #4 rgmii_rxc_1g;
      end
      else if (speed_mode == 2'b01)
      begin
         rgmii_rxc <= rgmii_rxc_100m;
         dly_rgmii_rxc <= #10 rgmii_rxc_100m;
         dly_rgmii_rxc_90 <= #20 rgmii_rxc_100m;
      end
      else
      begin
         rgmii_rxc <= rgmii_rxc_10m;
         dly_rgmii_rxc <= #100 rgmii_rxc_10m;
         dly_rgmii_rxc_90 <= #200 rgmii_rxc_10m;
      end
   end
   
   assign gmii_clk = 1'b0;
   
   
   always @(posedge clkin)
   begin: error_seen_p
      
      begin
         if (reset == 1'b1)
            error_seen <= 1'b0;
         else if (frame_error == 1'b1 & error_seen == 1'b0)
         begin
            error_seen <= 1'b1;
            if (!(1'b0))
            begin
               $write("ERROR: ");
               $display({"** Error: Frame mismatch seen", cr});
            end
         end
      end
   end
   
   assign gmii_col_exp = (gmii_tx_en | gmii_tx_er) & (gmii_rx_dv | gmii_rx_er);
   assign gmii_crs_exp = (gmii_tx_en | gmii_tx_er) | (gmii_rx_dv | gmii_rx_er);
   
   task send_gmii_frame_1g;
      
      input           current_frame;
      integer         current_frame;
      integer         current_col;
      reg [31:0]      fcs;
      integer         j;
   begin
      
      @(posedge gmii_tx_clk);
      
      fcs = {32{1'b0}};
      
      for (j = 0; j <= 7; j = j + 1)
      begin
         gmii_txd = #dly 8'b01010101;
         gmii_tx_en = #dly 1'b1;
         gmii_tx_er = #dly 1'b0;
         @(posedge gmii_tx_clk);
      end
      
      gmii_txd = #dly 8'b11010101;
      gmii_tx_en = #dly 1'b1;
      @(posedge gmii_tx_clk);
      
      current_col = 0;
      gmii_txd = #dly frame_data_columns_data;
      gmii_tx_en = #dly frame_data_columns_valid;
      gmii_tx_er = #dly frame_data_columns_error;
      fcs = calc_crc(frame_data_columns_data, 0, fcs, 32);
      
      @(posedge gmii_tx_clk);
      
      current_col = current_col + 1;
      while (frame_data_columns_valid != 1'b0)
      begin
         gmii_txd = #dly frame_data_columns_data;
         gmii_tx_en = #dly frame_data_columns_valid;
         gmii_tx_er = #dly frame_data_columns_error;
         fcs = calc_crc(frame_data_columns_data, 0, fcs, 32);
         
         current_col = current_col + 1;
         @(posedge gmii_tx_clk);
      end
      
      for (j = 0; j <= 3; j = j + 1)
      begin
         gmii_txd = #dly fcs[((8 * j) + 7):(8 * j)];
         gmii_tx_en = #dly 1'b1;
         gmii_tx_er = #dly 1'b0;
         @(posedge gmii_tx_clk);
      end
      
      gmii_txd = #dly {8{1'b0}};
      gmii_tx_en = #dly 1'b0;
      
      for (j = 0; j <= 7; j = j + 1)
         @(posedge gmii_tx_clk);
   end
   endtask
   task send_gmii_frame_10_100m;
      
      input           current_frame;
      integer         current_frame;
      integer         current_col;
      reg [31:0]      fcs;
      integer         j;
   begin
      
      @(posedge gmii_tx_clk);
      
      fcs = {32{1'b0}};
      
      for (j = 0; j <= 15; j = j + 1)
      begin
         gmii_txd = #30 8'b00000101;
         gmii_tx_en = #30 1'b1;
         gmii_tx_er = #30 1'b0;
         @(posedge gmii_tx_clk);
      end
      
      gmii_txd = #30 8'b00001101;
      gmii_tx_en = #30 1'b1;
      gmii_tx_er = #30 1'b0;
      @(posedge gmii_tx_clk);
      
      current_col = 0;
      gmii_txd = #30 {4'b0000, (frame_data_columns_data([3:0]))};
      gmii_tx_en = #30 frame_data_columns_valid;
      gmii_tx_er = #30 frame_data_columns_error;
      
      @(posedge gmii_tx_clk);
      gmii_txd = #30 {4'b0000, (frame_data_columns_data([7:4]))};
      gmii_tx_en = #30 frame_data_columns_valid;
      gmii_tx_er = #30 frame_data_columns_error;
      fcs = calc_crc((frame_data_columns_data()), 0, fcs, 32);
      
      @(posedge gmii_tx_clk);
      
      current_col = current_col + 1;
      while (frame_data_columns_valid != 1'b0)
      begin
         gmii_txd = #30 {4'b0000, (frame_data_columns_data([3:0]))};
         gmii_tx_en = #30 frame_data_columns_valid;
         gmii_tx_er = #30 frame_data_columns_error;
         
         @(posedge gmii_tx_clk);
         gmii_txd = #30 {4'b0000, (frame_data_columns_data([7:4]))};
         gmii_tx_en = #30 frame_data_columns_valid;
         gmii_tx_er = #30 frame_data_columns_error;
         
         fcs = calc_crc((frame_data_columns_data()), 0, fcs, 32);
         current_col = current_col + 1;
         @(posedge gmii_tx_clk);
      end
      
      for (j = 0; j <= 3; j = j + 1)
      begin
         gmii_txd = #30 {4'b0000, fcs[((8 * j) + 3):(8 * j)]};
         gmii_tx_en = #30 1'b1;
         gmii_tx_er = #30 1'b0;
         @(posedge gmii_tx_clk);
         gmii_txd = #30 {4'b0000, fcs[((8 * j) + 7):((8 * j) + 4)]};
         gmii_tx_en = #30 1'b1;
         gmii_tx_er = #30 1'b0;
         @(posedge gmii_tx_clk);
      end
      
      gmii_txd = #30 {8{1'b0}};
      gmii_tx_en = #30 1'b0;
      gmii_tx_er = #30 1'b0;
      
      for (j = 0; j <= 7; j = j + 1)
         @(posedge gmii_tx_clk);
   end
   endtask
   
   always
   begin: p_gmii_stimulus
      integer         current_frame;
      
      @(management_1g_config_finished);
      
      if (!(1'b0))
      begin
         $write("NOTE: ");
         $display({"Sending four frames on gmii transmit interface at 1Gb/s...", cr});
      end
      
      for (current_frame = 0; current_frame <= 65; current_frame = current_frame + 1)
         send_gmii_frame_1g(current_frame)<outdent>
         
         @(management_100m_config_finished);
         if (!(1'b0))
         begin
            $write("NOTE: ");
            $display({"Sending four frames on gmii transmit interface at 100Mb/s...", cr});
         end
         
         for (current_frame = 0; current_frame <= 65; current_frame = current_frame + 1)
            send_gmii_frame_10_100m(current_frame)<outdent>
            
            @(management_10m_config_finished);
            if (!(1'b0))
            begin
               $write("NOTE: ");
               $display({"Sending four frames on gmii transmit interface at 10Mb/s...", cr});
            end
            
            for (current_frame = 0; current_frame <= 65; current_frame = current_frame + 1)
               send_gmii_frame_10_100m(current_frame)<outdent>
               
               @(management_1g_config_finished);
               if (!(1'b0))
               begin
                  $write("NOTE: ");
                  $display({"Sending four frames on gmii transmit interface at 1Gb/s...", cr});
               end
               
               for (current_frame = 0; current_frame <= 65; current_frame = current_frame + 1)
                  send_gmii_frame_1g(current_frame)<outdent>
                  
                  @(tx_monitor_finished_rgmii_1G);
                  rx_gmii_stimulus_finished <= 1'b1;
               end
               
               task send_rgmii_frame_1g;
                  
                  input           current_frame;
                  integer         current_frame;
                  integer         current_col;
                  reg [31:0]      fcs;
                  integer         j;
               begin
                  
                  @(posedge rgmii_rxc);
                  
                  fcs = {32{1'b0}};
                  
                  for (j = 0; j <= 13; j = j + 1)
                  begin
                     rgmii_rxd = 4'b0101;
                     rgmii_rx_ctl = 1'b1;
                     @(<event:rgmii_rxc>);
                  end
                  
                  rgmii_rxd = 4'b0101;
                  rgmii_rx_ctl = 1'b1;
                  @(<event:rgmii_rxc>);
                  rgmii_rxd = 4'b1101;
                  rgmii_rx_ctl = 1'b1;
                  @(<event:rgmii_rxc>);
                  
                  current_col = 0;
                  rgmii_rxd = (frame_data_columns_data([3:0]));
                  rgmii_rx_ctl = frame_data_columns_valid;
                  @(<event:rgmii_rxc>);
                  rgmii_rxd = (frame_data_columns_data([7:4]));
                  rgmii_rx_ctl = frame_data_columns_valid;
                  fcs = calc_crc((frame_data_columns_data()), 0, fcs, 32);
                  
                  @(<event:rgmii_rxc>);
                  
                  current_col = current_col + 1;
                  while (frame_data_columns_valid != 1'b0)
                  begin
                     rgmii_rxd = (frame_data_columns_data([3:0]));
                     rgmii_rx_ctl = frame_data_columns_valid;
                     @(<event:rgmii_rxc>);
                     rgmii_rxd = (frame_data_columns_data([7:4]));
                     rgmii_rx_ctl = (frame_data_columns_valid ^ frame_data_columns_error);
                     fcs = calc_crc((frame_data_columns_data()), 0, fcs, 32);
                     current_col = current_col + 1;
                     @(<event:rgmii_rxc>);
                  end
                  
                  for (j = 0; j <= 3; j = j + 1)
                  begin
                     rgmii_rxd = fcs[((8 * j) + 3):(8 * j)];
                     rgmii_rx_ctl = 1'b1;
                     @(<event:rgmii_rxc>);
                     rgmii_rxd = fcs[((8 * j) + 7):((8 * j) + 4)];
                     rgmii_rx_ctl = 1'b1;
                     @(<event:rgmii_rxc>);
                  end
                  
                  rgmii_rxd = {4{1'b0}};
                  rgmii_rx_ctl = 1'b0;
                  
                  for (j = 0; j <= 7; j = j + 1)
                     @(posedge rgmii_rxc);
               end
               endtask
               task send_rgmii_frame_10_100m;
                  
                  input           current_frame;
                  integer         current_frame;
                  integer         current_col;
                  reg [31:0]      fcs;
                  integer         j;
               begin
                  
                  @(posedge rgmii_rxc);
                  
                  fcs = {32{1'b0}};
                  
                  for (j = 0; j <= 13; j = j + 1)
                  begin
                     rgmii_rxd = 4'b0101;
                     rgmii_rx_ctl = 1'b1;
                     @(posedge rgmii_rxc);
                  end
                  
                  rgmii_rxd = 4'b0101;
                  rgmii_rx_ctl = 1'b1;
                  @(posedge rgmii_rxc);
                  rgmii_rxd = 4'b1101;
                  rgmii_rx_ctl = 1'b1;
                  @(posedge rgmii_rxc);
                  
                  current_col = 0;
                  rgmii_rxd = (frame_data_columns_data([3:0]));
                  rgmii_rx_ctl = frame_data_columns_valid;
                  @(posedge rgmii_rxc);
                  rgmii_rxd = (frame_data_columns_data([7:4]));
                  rgmii_rx_ctl = frame_data_columns_valid;
                  fcs = calc_crc((frame_data_columns_data()), 0, fcs, 32);
                  @(posedge rgmii_rxc);
                  
                  current_col = current_col + 1;
                  while (frame_data_columns_valid != 1'b0)
                  begin
                     rgmii_rxd = (frame_data_columns_data([3:0]));
                     rgmii_rx_ctl = frame_data_columns_valid;
                     @(posedge rgmii_rxc);
                     rgmii_rxd = (frame_data_columns_data([7:4]));
                     rgmii_rx_ctl = (frame_data_columns_valid ^ frame_data_columns_error);
                     fcs = calc_crc((frame_data_columns_data()), 0, fcs, 32);
                     current_col = current_col + 1;
                     @(posedge rgmii_rxc);
                  end
                  
                  for (j = 0; j <= 3; j = j + 1)
                  begin
                     rgmii_rxd = fcs[((8 * j) + 3):(8 * j)];
                     rgmii_rx_ctl = 1'b1;
                     @(posedge rgmii_rxc);
                     rgmii_rxd = fcs[((8 * j) + 7):((8 * j) + 4)];
                     rgmii_rx_ctl = 1'b1;
                     @(posedge rgmii_rxc);
                  end
                  
                  rgmii_rxd = {4{1'b0}};
                  rgmii_rx_ctl = 1'b0;
                  
                  for (j = 0; j <= 14; j = j + 1)
                     @(posedge rgmii_rxc);
               end
               endtask
               
               always
               begin: p_rgmii_stimulus
                  integer         current_frame;
                  
                  if (!(1'b0))
                  begin
                     $write("NOTE: ");
                     $display({"--Real simulation starts here", cr});
                  end
                  @(management_1g_config_finished);
                  
                  if (!(1'b0))
                  begin
                     $write("NOTE: ");
                     $display({"Sending four frames on rgmii receive interface at 1Gb/s...", cr});
                  end
                  
                  for (current_frame = 0; current_frame <= 65; current_frame = current_frame + 1)
                     send_rgmii_frame_1g(current_frame)<outdent>
                     
                     @(management_100m_config_finished);
                     if (!(1'b0))
                     begin
                        $write("NOTE: ");
                        $display({"Sending four frames on rgmii receive interface at 100Mb/s...", cr});
                     end
                     
                     for (current_frame = 0; current_frame <= 65; current_frame = current_frame + 1)
                        send_rgmii_frame_10_100m(current_frame)<outdent>
                        
                        @(management_10m_config_finished);
                        if (!(1'b0))
                        begin
                           $write("NOTE: ");
                           $display({"Sending four frames on rgmii receive interface at 10Mb/s...", cr});
                        end
                        
                        for (current_frame = 0; current_frame <= 65; current_frame = current_frame + 1)
                           send_rgmii_frame_10_100m(current_frame)<outdent>
                           
                           @(management_1g_config_finished);
                           if (!(1'b0))
                           begin
                              $write("NOTE: ");
                              $display({"Sending four frames on rgmii receive interface at 1Gb/s...", cr});
                           end
                           
                           for (current_frame = 0; current_frame <= 65; current_frame = current_frame + 1)
                              send_rgmii_frame_1g(current_frame)<outdent>
                              
                              @(rx_monitor_finished_gmii_1G);
                              rx_rgmii_stimulus_finished <= 1'b1;
                           end
                           
                           task check_gmii_frame_1g;
                              
                              input           current_frame;
                              integer         current_frame;
                              integer         current_col;
                              reg [31:0]      fcs;
                              reg [1:4*8]     frame_type;
                              integer         j;
                           begin
                              
                              fcs = {32{1'b0}};
                              
                              while (gmii_rx_dv != 1'b1 | gmii_rxd == 8'b01010101)
                                 @(posedge gmii_rx_clk);
                              
                              if (gmii_rxd != 8'b11010101)
                                 if (!(1'b0))
                                 begin
                                    $write("ERROR: ");
                                    $display({"GMII SFD not present", cr});
                                 end
                              @(posedge gmii_rx_clk);
                              if (!(1'b0))
                              begin
                                 $write("NOTE: ");
                                 $display({"Comparing Transmitted Data Frames to Received Data Frames at 1Gb/s speed", cr});
                              end
                              
                              while ((frame_data_columns_valid) == 1'b1)
                              begin
                                 
                                 if (!(gmii_rx_dv == frame_data_columns_valid))
                                 begin
                                    $write("ERROR: ");
                                    $display({"gmii_rx_dv incorrect", cr});
                                 end
                                 
                                 if (gmii_rx_dv == 1'b1)
                                 begin
                                    
                                    if (current_col < 6)
                                       if (!(gmii_rxd[7:0] == (frame_data_columns_data([7:0]))))
                                       begin
                                          $write("ERROR: ");
                                          $display({"gmii_rxd incorrect Destination Address", cr});
                                       end
                                    
                                    else if (current_col >= 6 & current_col < 12)
                                       if (!(gmii_rxd[7:0] == (frame_data_columns_data([7:0]))))
                                       begin
                                          $write("ERROR: ");
                                          $display({"gmii_rxd incorrect Source Address", cr});
                                       end
                                    else
                                       
                                       if (!(gmii_rxd[7:0] == (frame_data_columns_data([7:0]))))
                                       begin
                                          $write("ERROR: ");
                                          $display({"gmii_rxd incorrect", cr});
                                       end
                                 end
                                 
                                 fcs = calc_crc(gmii_rxd, 8, fcs, 32);
                                 
                                 current_col = current_col + 1;
                                 @(posedge gmii_rx_clk);
                              end
                              
                              for (j = 0; j <= 3; j = j + 1)
                              begin
                                 if (!(gmii_rx_dv == 1'b1))
                                 begin
                                    $write("ERROR: ");
                                    $display({"gmii_rx_dv incorrect during FCS field", cr});
                                 end
                                 
                                 if (!(gmii_rxd == fcs[((8 * j) + 7):(8 * j)]))
                                 begin
                                    $write("ERROR: ");
                                    $display({"gmii_rxd incorrect during FCS field", cr});
                                 end
                                 
                                 @(posedge gmii_rx_clk);
                              end
                           end
                           endtask
                           task check_gmii_frame_10_100m;
                              
                              input           current_frame;
                              integer         current_frame;
                              integer         current_col;
                              reg [31:0]      fcs;
                              integer         j;
                           begin
                              
                              fcs = {32{1'b0}};
                              
                              while (gmii_rx_dv != 1'b1 | gmii_rxd == 8'b01010101)
                                 @(posedge gmii_rx_clk);
                              
                              if (!(1'b0))
                              begin
                                 $write("NOTE: ");
                                 $display({"Comparing Transmitted Data Frames to Received Data Frames at 100 or 10Mb/s speed", cr});
                              end
                              
                              if (gmii_rxd != 8'b11011101)
                                 if (!(1'b0))
                                 begin
                                    $write("ERROR: ");
                                    $display({"GMII SFD not present", cr});
                                 end
                              @(posedge gmii_rx_clk);
                              
                              while ((frame_data_columns_valid) == 1'b1)
                              begin
                                 
                                 if (!(gmii_rx_dv == frame_data_columns_valid))
                                 begin
                                    $write("ERROR: ");
                                    $display({"gmii_rx_dv incorrect", cr});
                                 end
                                 
                                 if (gmii_rx_dv == 1'b1)
                                 begin
                                    fcs = calc_crc(frame_data_columns_data, 0, fcs, 32);
                                    if (!(gmii_rxd[3:0] == (frame_data_columns_data([3:0]))))
                                    begin
                                       $write("ERROR: ");
                                       $display({"gmii_rxd incorrect", cr});
                                    end
                                    @(posedge gmii_rx_clk);
                                    if (!(gmii_rxd[3:0] == (frame_data_columns_data([7:4]))))
                                    begin
                                       $write("ERROR: ");
                                       $display({"gmii_rxd incorrect", cr});
                                    end
                                 end
                                 
                                 current_col = current_col + 1;
                                 @(posedge gmii_rx_clk);
                              end
                              
                              for (j = 0; j <= 3; j = j + 1)
                              begin
                                 if (!(gmii_rx_dv == 1'b1))
                                 begin
                                    $write("ERROR: ");
                                    $display({"gmii_rx_dv incorrect during FCS field", cr});
                                 end
                                 
                                 if (!(gmii_rxd[3:0] == fcs[((8 * j) + 3):(8 * j)]))
                                 begin
                                    $write("ERROR: ");
                                    $display({"gmii_rxd incorrect during FCS field", cr});
                                 end
                                 
                                 @(posedge gmii_rx_clk);
                                 
                                 if (!(gmii_rx_dv == 1'b1))
                                 begin
                                    $write("ERROR: ");
                                    $display({"gmii_rx_dv incorrect during FCS field", cr});
                                 end
                                 
                                 if (!(gmii_rxd[3:0] == fcs[((8 * j) + 7):((8 * j) + 4)]))
                                 begin
                                    $write("ERROR: ");
                                    $display({"gmii_rxd incorrect during FCS field", cr});
                                 end
                                 
                                 @(posedge gmii_rx_clk);
                              end
                           end
                           endtask
                           
                           always
                           begin: p_gmii_monitor
                              
                              reg [7:0]       f_columns_data;
                              reg             f_columns_valid;
                              reg             f_columns_error;
                              reg             f_bad_frame;
                              integer         current_frame;
                              
                              @(negedge reset);
                              
                              current_frame = 0;
                              while ()
                              begin
                                 
                                 if (current_frame == 65 + 1)
                                 
                                 check_gmii_frame_1g(current_frame);
                                 
                                 if (current_frame == 65)
                                 else
                                    current_frame = current_frame + 1;
                              end
                              
                              rx_monitor_finished_gmii_1G <= 1'b1;
                              #(200);
                              
                              current_frame = 0;
                              while ()
                              begin
                                 
                                 if (current_frame == 65 + 1)
                                 
                                 check_gmii_frame_10_100m(current_frame);
                                 
                                 if (current_frame == 65)
                                 else
                                    current_frame = current_frame + 1;
                              end
                              
                              rx_monitor_finished_gmii_100M <= 1'b1;
                              rx_monitor_finished_gmii_1G <= 1'b0;
                              #(200);
                              
                              current_frame = 0;
                              while ()
                              begin
                                 
                                 if (current_frame == 65 + 1)
                                 
                                 check_gmii_frame_10_100m(current_frame);
                                 
                                 if (current_frame == 65)
                                 else
                                    current_frame = current_frame + 1;
                              end
                              
                              rx_monitor_finished_gmii_100M <= 1'b0;
                              rx_monitor_finished_gmii_10M <= 1'b1;
                              #(200);
                              
                              current_frame = 0;
                              while ()
                              begin
                                 
                                 if (current_frame == 65 + 1)
                                 
                                 check_gmii_frame_1g(current_frame);
                                 
                                 if (current_frame == 65)
                                 else
                                    current_frame = current_frame + 1;
                              end
                              
                              rx_monitor_finished_gmii_10M <= 1'b0;
                              rx_monitor_finished_gmii_1G <= 1'b1;
                              #(200);
                              
                              if (!(1'b0))
                              begin
                                 $write("NOTE: ");
                                 $display("Test completed successfully");
                              end
                              $display("Simulation stopped");
                           end
                           
                           task check_rgmii_frame_1g;
                              
                              input           current_frame;
                              integer         current_frame;
                              integer         current_col;
                              reg [31:0]      fcs;
                              reg [1:4*8]     frame_type;
                              
                              reg [7:0]       rgmii_column;
                              integer         j;
                           begin
                              
                              fcs = {32{1'b0}};
                              
                              while (rgmii_tx_ctl != 1'b1)
                                 @(<event:rgmii_txc>);
                              
                              while (rgmii_txd == 4'b0101)
                                 @(negedge rgmii_txc);
                              
                              if (rgmii_txd != 4'b1101)
                                 if (!(1'b0))
                                 begin
                                    $write("ERROR: ");
                                    $display({"RGMII SFD not present", cr});
                                 end
                              @(posedge rgmii_txc);
                              
                              if (!(1'b0))
                              begin
                                 $write("NOTE: ");
                                 $display({"Comparing Transmitted Data Frames to Received Data Frames", cr});
                              end
                              
                              while ((frame_data_columns_valid) == 1'b1)
                              begin
                                 
                                 rgmii_column[3:0] = rgmii_txd;
                                 if (!(rgmii_tx_ctl == 1'b1))
                                 begin
                                    $write("NOTE: ");
                                    $display({"Expected error frame is detected", cr});
                                 end
                                 @(negedge rgmii_txc);
                                 rgmii_column[7:4] = rgmii_txd;
                                 
                                 if (rgmii_tx_ctl == 1'b1)
                                 begin
                                    
                                    if (current_col < 6)
                                       if (!(rgmii_column[7:0] == (frame_data_columns_data([7:0]))))
                                       begin
                                          $write("ERROR: ");
                                          $display({"rgmii_txd incorrect during Destination Address", cr});
                                       end
                                    
                                    else if (current_col >= 6 & current_col < 12)
                                       if (!(rgmii_column[7:0] == (frame_data_columns_data([7:0]))))
                                       begin
                                          $write("ERROR: ");
                                          $display({"rgmii_txd incorrect during Source Address", cr});
                                       end
                                    else
                                       
                                       if (!(rgmii_column[7:0] == (frame_data_columns_data([7:0]))))
                                       begin
                                          $write("ERROR: ");
                                          $display({"rgmii_txd incorrect", cr});
                                       end
                                 end
                                 else
                                    if (!(1'b0))
                                    begin
                                       $write("NOTE: ");
                                       $display({"Expected error frame is detected", cr});
                                    end
                                 
                                 fcs = calc_crc(rgmii_column, 8, fcs, 32);
                                 
                                 current_col = current_col + 1;
                                 @(posedge rgmii_txc);
                              end
                              
                              for (j = 0; j <= 3; j = j + 1)
                              begin
                                 
                                 rgmii_column[3:0] = rgmii_txd;
                                 if (!(rgmii_tx_ctl == 1'b1))
                                 begin
                                    $write("ERROR: ");
                                    $display({"rgmii_tx_ctl incorrect during FCS field", cr});
                                 end
                                 @(negedge rgmii_txc);
                                 rgmii_column[7:4] = rgmii_txd;
                                 
                                 if (!(rgmii_tx_ctl == 1'b1))
                                 begin
                                    $write("ERROR: ");
                                    $display({"rgmii_tx_ctl incorrect during FCS field", cr});
                                 end
                                 
                                 if (!(rgmii_column == fcs[((8 * j) + 7):(8 * j)]))
                                 begin
                                    $write("ERROR: ");
                                    $display({"rgmii_txd incorrect during FCS field", cr});
                                 end
                                 
                                 @(posedge rgmii_txc);
                              end
                           end
                           endtask
                           task check_rgmii_frame_10_100m;
                              
                              input           current_frame;
                              integer         current_frame;
                              integer         current_col;
                              reg [31:0]      fcs;
                              
                              reg [7:0]       rgmii_column;
                              integer         j;
                           begin
                              
                              fcs = {32{1'b0}};
                              
                              while (rgmii_tx_ctl != 1'b1)
                                 @(<event:rgmii_txc>);
                              
                              while (rgmii_txd == 4'b0101)
                                 @(posedge rgmii_txc);
                              
                              if (!(1'b0))
                              begin
                                 $write("NOTE: ");
                                 $display({"Comparing Transmitted Data Frames to Received Data Frames", cr});
                              end
                              
                              if (rgmii_txd != 4'b1101)
                                 if (!(1'b0))
                                 begin
                                    $write("ERROR: ");
                                    $display({"RGMII SFD not present", cr});
                                 end
                              @(posedge rgmii_txc);
                              
                              while ((frame_data_columns_valid) == 1'b1)
                              begin
                                 
                                 rgmii_column[3:0] = rgmii_txd;
                                 if (!(rgmii_tx_ctl == 1'b1))
                                 begin
                                    $write("NOTE: ");
                                    $display({"Expected error frame is detected", cr});
                                 end
                                 @(posedge rgmii_txc);
                                 rgmii_column[7:4] = rgmii_txd;
                                 
                                 if (rgmii_tx_ctl == 1'b1)
                                 begin
                                    
                                    if (current_col < 6)
                                       if (!(rgmii_column[7:0] == (frame_data_columns_data([7:0]))))
                                       begin
                                          $write("ERROR: ");
                                          $display({"rgmii_txd incorrect during Destination Address", cr});
                                       end
                                    
                                    else if (current_col >= 6 & current_col < 12)
                                       if (!(rgmii_column[7:0] == (frame_data_columns_data([7:0]))))
                                       begin
                                          $write("ERROR: ");
                                          $display({"rgmii_txd incorrect during Source Address", cr});
                                       end
                                    else
                                       
                                       if (!(rgmii_column[7:0] == (frame_data_columns_data([7:0]))))
                                       begin
                                          $write("ERROR: ");
                                          $display({"rgmii_txd incorrect", cr});
                                       end
                                 end
                                 else
                                    
                                    if (!(1'b0))
                                    begin
                                       $write("NOTE: ");
                                       $display({"Expected error frame is detected", cr});
                                    end
                                 
                                 fcs = calc_crc(rgmii_column, 8, fcs, 32);
                                 
                                 current_col = current_col + 1;
                                 @(posedge rgmii_txc);
                              end
                              
                              for (j = 0; j <= 3; j = j + 1)
                              begin
                                 
                                 rgmii_column[3:0] = rgmii_txd;
                                 if (!(rgmii_tx_ctl == 1'b1))
                                 begin
                                    $write("ERROR: ");
                                    $display({"rgmii_tx_ctl incorrect during FCS field", cr});
                                 end
                                 @(posedge rgmii_txc);
                                 rgmii_column[7:4] = rgmii_txd;
                                 
                                 if (!(rgmii_tx_ctl == 1'b1))
                                 begin
                                    $write("ERROR: ");
                                    $display({"rgmii_tx_ctl incorrect during FCS field", cr});
                                 end
                                 
                                 if (!(rgmii_column == fcs[((8 * j) + 7):(8 * j)]))
                                 begin
                                    $write("ERROR: ");
                                    $display({"rgmii_txd incorrect during FCS field", cr});
                                 end
                                 
                                 @(negedge rgmii_txc);
                                 
                                 @(posedge rgmii_txc);
                              end
                           end
                           endtask
                           
                           always
                           begin: p_rgmii_monitor
                              
                              reg [7:0]       f_columns_data;
                              reg             f_columns_valid;
                              reg             f_columns_error;
                              reg             f_bad_frame;
                              integer         current_frame;
                              
                              @(negedge reset);
                              
                              current_frame = 0;
                              while ()
                              begin
                                 
                                 if (current_frame == 65 + 1)
                                 
                                 check_rgmii_frame_1g(current_frame);
                                 
                                 if (current_frame == 65)
                                 else
                                    current_frame = current_frame + 1;
                              end
                              
                              tx_monitor_finished_rgmii_1G <= 1'b1;
                              #(200);
                              
                              current_frame = 0;
                              while ()
                              begin
                                 
                                 if (current_frame == 65 + 1)
                                 
                                 check_rgmii_frame_10_100m(current_frame);
                                 
                                 if (current_frame == 65)
                                 else
                                    current_frame = current_frame + 1;
                              end
                              
                              tx_monitor_finished_rgmii_100M <= 1'b1;
                              tx_monitor_finished_rgmii_1G <= 1'b0;
                              #(200);
                              
                              current_frame = 0;
                              while ()
                              begin
                                 
                                 if (current_frame == 65 + 1)
                                 
                                 check_rgmii_frame_10_100m(current_frame);
                                 
                                 if (current_frame == 65)
                                 else
                                    current_frame = current_frame + 1;
                              end
                              
                              tx_monitor_finished_rgmii_100M <= 1'b0;
                              tx_monitor_finished_rgmii_10M <= 1'b1;
                              #(200);
                              
                              current_frame = 0;
                              while ()
                              begin
                                 
                                 if (current_frame == 65 + 1)
                                 
                                 check_rgmii_frame_1g(current_frame);
                                 
                                 if (current_frame == 65)
                                 else
                                    current_frame = current_frame + 1;
                              end
                              
                              tx_monitor_finished_rgmii_10M <= 1'b0;
                              tx_monitor_finished_rgmii_1G <= 1'b1;
                              #(200);
                              
                              if (!(1'b0))
                              begin
                                 $write("FAILURE: ");
                                 $display("Simulation stopped");
                              end
                           end
                           
                           
                           always
                           begin: p_configuration
                              integer         i;
                              if (!(1'b0))
                              begin
                                 $write("NOTE: ");
                                 $display({"Timing checks are not valid", cr});
                              end
                              
                              mdio_o <= 1'b1;
                              enable_mdc <= 1'b0;
                              
                              if (!(1'b0))
                              begin
                                 $write("NOTE: ");
                                 $display({"Resetting core...", cr});
                              end
                              reset <= 1'b1;
                              #(1000);
                              @(posedge clkin);
                              reset <= 1'b0;
                              
                              #(2);
                              
                              if (!(1'b0))
                              begin
                                 $write("NOTE: ");
                                 $display({"Setting MAC speed to 1Gb/s to Control Register in PCS sublayer....", cr});
                              end
                              @(negedge mdc);
                              
                              enable_mdc <= 1'b1;
                              for (i = 0; i <= 63; i = i + 1)
                              begin
                                 mdio_o <= mdio_1g_data[i];
                                 @(negedge mdc);
                              end
                              @(negedge mdc);
                              enable_mdc <= 1'b0;
                              mdio_o <= 'H';
                              
                              @(negedge mdc);
                              
                              @(negedge mdc);
                              management_1g_config_finished <= 1'b1;
                              @(rx_monitor_finished_gmii_1G & tx_monitor_finished_rgmii_1G);
                              management_1g_config_finished <= 1'b0;
                              
                              if (!(1'b0))
                              begin
                                 $write("NOTE: ");
                                 $display({"Resetting core...", cr});
                              end
                              reset <= 1'b1;
                              #(1000);
                              @(posedge clkin);
                              reset <= 1'b0;
                              
                              #(2);
                              
                              if (!(1'b0))
                              begin
                                 $write("NOTE: ");
                                 $display({"Setting MAC speed to 100Mb/s to Control Register in PCS sublayer....", cr});
                              end
                              @(negedge mdc);
                              
                              enable_mdc <= 1'b1;
                              for (i = 0; i <= 63; i = i + 1)
                              begin
                                 mdio_o <= mdio_100m_data[i];
                                 @(negedge mdc);
                              end
                              @(negedge mdc);
                              enable_mdc <= 1'b0;
                              mdio_o <= 'H';
                              
                              @(negedge mdc);
                              
                              @(negedge mdc);
                              
                              management_100m_config_finished <= 1'b1;
                              @(rx_monitor_finished_gmii_100M & tx_monitor_finished_rgmii_100M);
                              management_100m_config_finished <= 1'b0;
                              
                              if (!(1'b0))
                              begin
                                 $write("NOTE: ");
                                 $display({"Resetting core...", cr});
                              end
                              reset <= 1'b1;
                              #(1000);
                              @(posedge clkin);
                              reset <= 1'b0;
                              
                              #(2);
                              if (!(1'b0))
                              begin
                                 $write("NOTE: ");
                                 $display({"Setting MAC speed to 10Mb/s to Control Register in PCS sublayer....", cr});
                              end
                              @(negedge mdc);
                              enable_mdc <= 1'b1;
                              
                              for (i = 0; i <= 63; i = i + 1)
                              begin
                                 mdio_o <= mdio_10m_data[i];
                                 @(negedge mdc);
                              end
                              @(negedge mdc);
                              enable_mdc <= 1'b0;
                              mdio_o <= 'H';
                              
                              @(negedge mdc);
                              
                              @(negedge mdc);
                              
                              management_10m_config_finished <= 1'b1;
                              @(rx_monitor_finished_gmii_10M & tx_monitor_finished_rgmii_10M);
                              management_10m_config_finished <= 1'b0;
                              
                              if (!(1'b0))
                              begin
                                 $write("NOTE: ");
                                 $display({"Resetting core...", cr});
                              end
                              reset <= 1'b1;
                              #(1000);
                              @(posedge clkin);
                              reset <= 1'b0;
                              
                              #(2);
                              
                              if (!(1'b0))
                              begin
                                 $write("NOTE: ");
                                 $display({"Setting MAC speed to 1Gb/s to Control Register in PCS sublayer....", cr});
                              end
                              @(negedge mdc);
                              
                              enable_mdc <= 1'b1;
                              for (i = 0; i <= 63; i = i + 1)
                              begin
                                 mdio_o <= mdio_1g_data[i];
                                 @(negedge mdc);
                              end
                              @(negedge mdc);
                              enable_mdc <= 1'b0;
                              mdio_o <= 'H';
                              
                              @(negedge mdc);
                              
                              @(negedge mdc);
                              
                              management_1g_config_finished <= 1'b1;
                              @(rx_monitor_finished_gmii_1G & tx_monitor_finished_rgmii_1G);
                              management_1g_config_finished <= 1'b0;
                              
                           end
                           
endmodule
